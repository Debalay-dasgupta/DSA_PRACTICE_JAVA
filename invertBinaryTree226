/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        
        if(root==null)
            return null;
        
        //faith that the function will do for the immediate child
        
        TreeNode lc = invertTree(root.left);
        TreeNode rc = invertTree(root.right);
        
        // have received leftchild and child with help of recursion's magic
        //only attach left with right child and vice versa
        root.left = rc;
        root.right = lc;
        
        return root;
        
        
    }
}
