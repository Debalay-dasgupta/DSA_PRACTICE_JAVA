class Solution {
    public boolean isPalindrome(String s) {
        //using regex
        //[^A-Z] means ignore all character in string containing A to Z
        String s1 = s.replaceAll("[^A-Za-z0-9]","");
        //palindrome means reversed string is also same
        return new StringBuilder(s1).reverse().toString().equalsIgnoreCase(s1);
    }
}



class Solution2 {
    public boolean isPalindrome(String s) {
        //convert to lowercase
        //use two pointers
        
        String s1 = s.toLowerCase();
        int left = 0;
        int right = s1.length()-1;
        while(left<right)
        {
            //ignore when specialcharacter encountered  and 
            //continue statement b/q while condition can't be checked inside
            if(!Character.isLetterOrDigit(s1.charAt(left)))
            {
                left++;
                continue;
            }
            else if (!Character.isLetterOrDigit(s1.charAt(right)))
            {
                right--;
                continue;
            }
            //return false when matching fails
            else if(s1.charAt(left)!=s1.charAt(right))
            {
                return false;
            }
            //if not special character still matches then continue    
            else
                {
                    left++;
                    right--;
                }
            
        }
        
        return true;
        
    }
}
